{% extends "layout.jinja2" %}

{#
<!-- {% block pagestyles %}
  {% assets "home_less_bundle" %}
    <link href="{{ ASSET_URL }}" rel="stylesheet" type="text/css">
  {% endassets %}
{% endblock %} -->

#}{% set df = df|default([]) -%}


{% block content %}

  {% set active_category = "curve" -%}
  {% set active_page = "curve_meta" -%}
  {% set sub_active_page = 'contributing_factors' -%}
  {% include "navigation.jinja2" %}
    <h1>{{ title }}</h1>
    <div class="row">

        <div class="card bg-warning text-infomb-3" >
          <div class="card-body">

          <form method="POST" action="{{ url_for('curve_meta_bp.contributing_factors') }}">
            {{ form.csrf_token }}
            <h3 class="card-title">Select Parameters: </h3>
            <table class="table table-hover">
            <tbody>
                <tr>
                <th scope="row"> {{ form.target_gauge.label }}</th>
                <td>{{ form.target_gauge(placeholder='0x90efd41e75360ffc7fd1d3c5fc0e4f43e8bcd9bc') }}</td>
                </tr>
                {% if form.target_gauge.errors %}
                  {% for error in form.target_gauge.errors %}
                  <tr class="errors">
                  <th scope="row text-danger"> Error ^ </th>
                  <td>{{ error }}</td>
                  </tr>
                  {% endfor %}
                {% endif %}
                <tr>
                <th scope="row">{{ form.compare_back.label }}</th>
                <td>{{ form.compare_back(placeholder=16) }}</td>
                </tr>
                {% if form.compare_back.errors %}
                  {% for error in form.compare_back.errors %}
                  <tr class="errors">
                  <th scope="row text-danger"> Error ^ </th>
                  <td>{{ error }}</td>
                  </tr>
                  {% endfor %}
                {% endif %}
            </tbody>
            </table>

            <div class="submit-button" >
                {{ form.submit }}
            </div>

        </form>
        </div>
      </div>



    </div>
    <div class="row">
        <div class="card bg-outline-warning mb-3" >
            <div class="card-header">Reference Table</div>
                <div class="card-body">
                <div id="reference_table" class="reference_table"></div>
            </div>
        </div>
    </div>

{% if df|length > 0 %}

    {% with gauge_info=local_df_curve_gauge_registry.iloc[0] %}
        {% include 'gauge_widget.jinja2' %} 
    {% endwith %}

    <div class="row">

        <div class="card text-white bg-primary mb-3" >
          <div class="card-header">By Curve Checkpoint {{top_x}}</div>
          <div class="card-body">
              {# <h4 class="card-title">??}}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart" class="chart"></div>
          </div>
        </div>
    </div>

    <div class="row">

        <div class="card text-white bg-secondary mb-3" >
          <div class="card-header">By Votium Round {{top_x}}</div>
          <div class="card-body">
              {# <h4 class="card-title">??}}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart2" class="chart2"></div>
          </div>
        </div>
    </div>

    
    <div class="row">
        <h4 class="text-primary">Top {{top_x}} Contributing Factors</h4>
        <div id="head_table"></div>
    </div>





<script type='text/javascript'>
      new gridjs.Grid({
        columns: [
            { id: 'checkpoint_id', name: 'Display Name' },
            { id: 'checkpoint_timestamp', name: 'Checkpoint Timestamp'},
            { id: 'avg_crv_price', name: 'Avg CRV Price',
              {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'issuance_received', name: 'Issuance Recieved',
              {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'issuance_value', name: 'Issuance Value',
                formatter: (_, row) =>  `${row.cells[4].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'yield_rate_adj', name: 'Yield Rate Adj',
                formatter: (_, row) =>  `${row.cells[5].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'total_vote_percent', name: 'veCRV Vote Percent',
                formatter: (_, row) =>  `${row.cells[6].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'total_balance_usd', name: 'TVL USD',
                formatter: (_, row) =>  `${row.cells[7].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'total_bounty_value', name: 'Bounty (USD)',
                formatter: (_, row) =>  `${row.cells[8].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },
            { id: 'votium_round', name: 'Votium Round',
                formatter: (_, row) =>  `${row.cells[8].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`,
                {% include 'utility_sort_float.jinja2' %} 
            },



        ],
        data: [
          {% for index, row in df.iterrows() %}
            {
              'checkpoint_id': '{{ row['checkpoint_id'] }}',
              'checkpoint_timestamp': '{{ row['checkpoint_timestamp']  }}',
              'avg_crv_price': '{{ row['avg_crv_price']| round(4) }}',
              'issuance_received': '{{ row['issuance_received']| round(2) }}',
              'issuance_value': '{{ row['issuance_value']|round(2)  }}',
              'yield_rate_adj': '{{ row['yield_rate_adj']|round(2) }}',
              'total_vote_percent': '{{ row['total_vote_percent']|round(2) }}',
              'total_balance_usd': '{{ row['total_balance_usd']|round(2) }}',
              'total_bounty_value': '{{ row['total_bounty_value']|round(2) }}',
              'votium_round': '{{ row['votium_round']|round() }}',



            },
          {% endfor %}
        ],
        {% include 'table_format_helper.jinja2' %}

      }).render(document.getElementById('head_table'));
</script>



<script src='https://cdn.plot.ly/plotly-latest.min.js'></script>
<script type='text/javascript'>
  var graphs = {{graphJSON | safe}};
  Plotly.plot('chart',graphs,{});
</script>

<script type='text/javascript'>
  var graphs2 = {{graphJSON2 | safe}};
  Plotly.plot('chart2',graphs2,{});
</script>

{% endif %}
<script type='text/javascript'>
      new gridjs.Grid({
        columns: [
            { id: 'gauge_name', name: 'Gauge Name' },
            { id: 'gauge_symbol', name: 'Gauge Symbol',},
            { id: 'gauge_addr', name: 'Gauge Address'},
            { id: 'pool_symbol', name: 'Pool Symbol'},
            { id: 'pool_addr', name: 'Pool Address'},
            { id: 'vote_timestamp', name: 'Vote Timestamp'},

        ],
        data: [
          {% for index, row in df_approved_gauges.iterrows() %}
            {
              'gauge_name': '{{ row['gauge_name'] }}',
              'gauge_symbol': '{{ row['gauge_symbol']  }}',
              'gauge_addr': '{{ row['gauge_addr'] }}',
              'pool_symbol': '{{ row['pool_symbol'] }}',
              'pool_addr': '{{ row['pool_addr'] }}',
              'vote_timestamp': '{{ row['vote_timestamp'] }}',

            },
          {% endfor %}
        ],
        {% with max_size = 5 %}
        {% with table_type = 'info' %}

          {% include 'table_format_helper.jinja2' %}
        {% endwith %}
        {% endwith %}

      }).render(document.getElementById('reference_table'));
</script>
{% endblock %}

