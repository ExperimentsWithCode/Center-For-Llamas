{% extends "layout.jinja2" %}

{#
<!-- {% block pagestyles %}
  {% assets "home_less_bundle" %}
    <link href="{{ ASSET_URL }}" rel="stylesheet" type="text/css">
  {% endassets %}
{% endblock %} -->
#}

{% block content %}
  {% include "navigation.jinja2" %}

    <div class="row">
      <h1>{{ title }}</h1>


    {% with gauge_info=local_df_curve_gauge_registry.iloc[0] %}
      {% with page_type='convex' %}
        {% include 'gauge_widget.jinja2' %} 
      {% endwith %}
    {% endwith %}
    <div class="row">

        <div class="card border-primary mb-3" style="max-width: 50%;" >
          <div class="card-header">Choice</div>
          <div class="card-body">
            <h4 class="card-title">{{df_snapshot_user.iloc[0]['choice']}}</h4>

          </div>
        </div>
        <div class="card border-secondary mb-3" style="max-width: 50%;" >
          <div class="card-header">Title</div>
          <div class="card-body">
            <h4 class="card-title text-primary">{{df_snapshot_user.iloc[0]['proposal_title']}}</h4>

            {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
          </div>
        </div>
    </div>

    <div class="row">

       <div class="card border-secondary mb-3" style="max-width: 50%;" >
        <div class="card-header">Previous Votes</div>
        <div class="card-body">
          <h4 class="card-title text-secondary">{{ "{:,.2f}".format(prior_votes) }}</h4>
        </div>
      </div>   

      <div class="card border-primary mb-3" style="max-width: 50%;" >
        <div class="card-header">Current Votes</div>
        <div class="card-body">
          <h4 class="card-title text-primary">{{ "{:,.2f}".format(current_votes) }}
            {% if current_votes > prior_votes  %}
              <span class="badge bg-primary rounded-pill">
               + {{"{:,.2f}".format(((current_votes / prior_votes)-1)*100)}} %
              </span>
            {% elif current_votes == prior_votes  %}
              <span class="badge bg-info rounded-pill">
               {{"{:,.2f}".format(((current_votes / prior_votes)-1)*100)}} %
              </span>
            {% else %}
              <span class="badge bg-secondary rounded-pill">
               {{"{:,.2f}".format(((current_votes / prior_votes)-1)*100)}} %
              </span>
            {% endif %}
            </h4>
          {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
        </div>
      </div>

    <div class="row">

        <div class="card text-white bg-info mb-3" style="max-width: 50%;">
          <div class="card-header">This Rounds Votes by Voter</div>
          <div class="card-body">
              {# <h4 class="card-title">}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart" class="chart"></div>
          </div>
        </div>

        <div class="card text-white bg-danger mb-3" style="max-width: 50%;" >
          <div class="card-header">This Rounds Votes by Whitelist</div>
          <div class="card-body">
              {# <h4 class="card-title">}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart4" class="chart4"></div>
          </div>
        </div>
      </div>
      <div class="row">

        <div class="card text-white bg-primary mb-3" >
          <div class="card-header">Votes per round by Voter</div>
          <div class="card-body">
              {# <h4 class="card-title">??}}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart2" class="chart2"></div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="card text-white bg-secondary mb-3" >
          <div class="card-header">Votes Per Round by Whiteliested Addresses</div>
          <div class="card-body">
              {# <h4 class="card-title">??}}</h4> #}
              {# <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p> #}
              <div id="chart3" class="chart3"></div>
          </div>
        </div>
    </div>
    
    <div class="row">
        <h4 class="text-primary">Votes Per Round</h4>

        <div id="vote_table"></div>
    </div>






<script src='https://cdn.plot.ly/plotly-latest.min.js'></script>
<script type='text/javascript'>
  var graphs = {{graphJSON | safe}};
  Plotly.plot('chart',graphs,{});
</script>

<script type='text/javascript'>
  var graphs2 = {{graphJSON2 | safe}};
  Plotly.plot('chart2',graphs2,{});
</script>

<script type='text/javascript'>
  var graphs3 = {{graphJSON3 | safe}};
  Plotly.plot('chart3',graphs3,{});
</script>

<script type='text/javascript'>
  var graphs4 = {{graphJSON4 | safe}};
  Plotly.plot('chart4',graphs4,{});
</script>

<script type='text/javascript'>
      new gridjs.Grid({
        columns: [
            { id: 'proposal_title', name: 'Round' },
            { id: 'known_as', name: 'Known As' },
            { id: 'voter', name: 'voter' ,
                formatter: (_, row) => gridjs.html(
                `<a href=${row.cells[7].data}>${row.cells[2].data}</a>`
              )
            },
            { id: 'choice_power', name: 'Vote Power',
                formatter: (_, row) =>  `${row.cells[3].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`
            },
            { id: 'choice_percent', name: 'Percent',
              formatter: (_, row) =>  `${row.cells[4].data} %`

            },

            { id: 'available_power', name: 'vlCVX',
                formatter: (_, row) =>  `${row.cells[5].data.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}`
            },
            { id: 'timestamp', name: 'Vote Timestamp' },

            { id: '_', name: '_', formatter: (_, row) => gridjs.html(``) },

        ],
        data: [
          {% for index, row in df_snapshot_user.iterrows() %}
            {
                'proposal_title': '{{ row['proposal_title']  }}',
                'known_as': '{{ row['known_as'] }}',
                'voter': '{{ row['voter'] }}',
                'choice_power': '{{ row['choice_power']|round(2)}}',
                'choice_percent': '{{ (row['choice_percent'] * 100) |round(2) }}',
                'available_power': '{{ row['available_power']|round(2) }}',
                'timestamp': '{{ row['timestamp'] }}',
                '_': `{{ url_for('convex_snapshot_bp.voter', voter = row['voter']) }}`
            },
          {% endfor %}
        ],
        search: true,
        sort: true,
        pagination: {
          limit: 50,
          summary: true
        },
        className: {
          {# td: 'my-td-class', #}
          th: 'table-primary',
          table: 'table table-hover' 
        }
      }).render(document.getElementById('vote_table'));
</script>

{% endblock %}
